name: Windows

on: [push, pull_request, workflow_dispatch]

jobs:
  build-msvc:
    runs-on: windows-2019
    
    strategy:
      matrix:
        arch: [x86, x64]
        include:
          - arch: x86
            platform: Win32
            bits: 32
            # unable to diagnose this error during `import vapoursynth`
            # ImportError: DLL load failed while importing vapoursynth: A dynamic link library (DLL) initialization routine failed.
            test: false
          - arch: x64
            platform: x64
            bits: 64
            test: true

    steps:
    - uses: actions/checkout@v2

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1
  
    - name: Clone Dependencies
      run: |
        git clone https://github.com/vapoursynth/vsrepo --depth 1
        git clone https://github.com/sekrit-twc/zimg --branch v3.0 --depth 1
        git clone https://github.com/AviSynth/AviSynthPlus.git --depth 1
        # just before the update to v143 toolset (MSVC 2022)
        git clone https://github.com/sekrit-twc/libp2p
        pushd libp2p
        git checkout 10f88fcc811db84a2f25b4b87729d58a569b2486
        popd
        git clone https://github.com/microsoft/mimalloc --branch v2.0.1 --depth 1

    - name: Build mimalloc
      shell: cmd
      run: |
        cd mimalloc
        msbuild ide/vs2019/mimalloc.sln /p:Configuration=Release /p:Platform=${{ matrix.arch }}
        out\msvc-${{matrix.platform}}\Release\mimalloc-override-test.exe
        cd ..

    - name: Setup Python 3.8
      uses: actions/setup-python@v2
      with:
        # Version range or exact version of a Python version to use, using SemVer's version range syntax.
        python-version: 3.8
        # The target architecture (x86, x64) of the Python interpreter.
        architecture: ${{ matrix.arch }}

    - name: Install Python 3.8 cython and Save Path
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install cython
        echo "PYTHON38=$(cygpath -w $(which python))" >> $GITHUB_ENV
        echo "PIP38=$(cygpath -w $(which pip))" >> $GITHUB_ENV

    - name: Patch Python 3.8 Include Paths
      run: |
        $py_include_path = ((Split-Path -Path (Get-Command python.exe).Path) + "\include" )
        $py_binary_path = ((Split-Path -Path (Get-Command python.exe).Path) + "\libs" )
        (Get-Content -Path "msvc_project/VSScriptPython38/VSScriptPython38.vcxproj" -Raw) -replace "C:\\Program Files %28x86%29\\Python38-32\\libs",$py_binary_path | Set-Content "msvc_project/VSScriptPython38/VSScriptPython38.vcxproj"
        (Get-Content -Path "msvc_project/VSScriptPython38/VSScriptPython38.vcxproj" -Raw) -replace "C:\\Program Files %28x86%29\\Python38-32\\include",$py_include_path | Set-Content "msvc_project/VSScriptPython38/VSScriptPython38.vcxproj"
        (Get-Content -Path "msvc_project/VSScriptPython38/VSScriptPython38.vcxproj" -Raw) -replace "C:\\Program Files\\Python38\\libs",$py_binary_path | Set-Content "msvc_project/VSScriptPython38/VSScriptPython38.vcxproj"
        (Get-Content -Path "msvc_project/VSScriptPython38/VSScriptPython38.vcxproj" -Raw) -replace "C:\\Program Files\\Python38\\include",$py_include_path | Set-Content "msvc_project/VSScriptPython38/VSScriptPython38.vcxproj"

    - name: Setup Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
        architecture: ${{ matrix.arch }}

    - name: Install cython
      run: |
        python -m pip install --upgrade pip
        pip install cython

    - name: Patch Python 3.9 Include Paths
      run: |
        $py_include_path = ((Split-Path -Path (Get-Command python.exe).Path) + "\include" )
        $py_binary_path = ((Split-Path -Path (Get-Command python.exe).Path) + "\libs" )
        (Get-Content -Path "msvc_project\VSScript\VSScript.vcxproj" -Raw) -replace "C:\\Program Files %28x86%29\\Python39-32\\libs",$py_binary_path | Set-Content "msvc_project\VSScript\VSScript.vcxproj"
        (Get-Content -Path "msvc_project\VSScript\VSScript.vcxproj" -Raw) -replace "C:\\Program Files %28x86%29\\Python39-32\\include",$py_include_path | Set-Content "msvc_project\VSScript\VSScript.vcxproj"
        (Get-Content -Path "msvc_project\VSScript\VSScript.vcxproj" -Raw) -replace "C:\\Program Files\\Python39\\libs",$py_binary_path | Set-Content "msvc_project\VSScript\VSScript.vcxproj"
        (Get-Content -Path "msvc_project\VSScript\VSScript.vcxproj" -Raw) -replace "C:\\Program Files\\Python39\\include",$py_include_path | Set-Content "msvc_project\VSScript\VSScript.vcxproj"

    - name: Compile VS
      run: |
        msbuild msvc_project/VapourSynth.sln /t:Build /p:Configuration=Release /p:Platform=${{ matrix.platform }}        
    - name: Build Python 3.9 plugin
      run: |
        pip install . --no-deps -v
    - name: Build Python 3.8 plugin
      run: |
        & "$env:PIP38" install . --no-deps -v
    - name: Build installer
      run: |
        pushd installer
        $env:SKIP_COMPRESS="no"
        $env:SKIP_WAIT="yes"
        & ".\make portable.bat"
        
        if ("${{ matrix.arch }}" -eq "x64") {
          pushd buildp64
        } else {
          pushd buildp32
        }
        pip install . --no-deps -v
        & "$env:PIP38" install . --no-deps -v
        popd
        popd

    - name: Build release
      shell: bash
      run: |
        bits=${{ matrix.bits }}
        arch=${{ matrix.arch }}
        cp "$(dirname $(which python))"/Lib/site-packages/vapoursynth*.pyd installer/buildp$bits
        cp "$(dirname $PYTHON38)"/Lib/site-packages/vapoursynth*.pyd installer/buildp$bits
        7z a -t7z -mx=3 ../build.7z .
        mv ../*.7z .
        mv installer/buildp$bits upload
    - name: Upload build artifact
      uses: actions/upload-artifact@v2
      with:
        name: build-${{matrix.arch}}
        if-no-files-found: error
        path: build.7z

    - name: Run test
      if: ${{ matrix.test }}
      run: python -m unittest discover -s test -p "*test.py"

    - name: Install sphinx
      run: |
        pip install -r python-requirements.txt

    - name: Build Doc
      shell: cmd
      run: |
        set SPHINXBUILD=sphinx-build
        call docs_build.bat

    - name: Build release
      shell: bash
      run: |
        set -ex
        mv doc/_build/html upload/doc

    - name: Upload release artifact
      uses: actions/upload-artifact@v2
      with:
        name: release-${{matrix.arch}}
        if-no-files-found: error
        path: |
          upload/
